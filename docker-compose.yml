version: "3.8"

services:
  zookeeper:
    image: "docker.io/bitnami/zookeeper:3-debian-10"
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/smart_phone_iot"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - iot_network
  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/smart_phone_iot"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    networks:
      - iot_network
    depends_on:
      - zookeeper
    links:
      - zookeeper
  producer:
    build:
      context: ./kafka-producer
    container_name: kafka-producer
    restart: always
    ports:
      - "5555:5555/udp"
    networks:
      - iot_network
    depends_on:
      - kafka
    links:
      - kafka

  elasticsearch:
    image: elasticsearch:7.7.0
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - iot_network
  kibana:
    image: kibana:7.7.0
    container_name: kibana
    hostname: kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - iot_network
  logstash:
    image: logstash:7.7.0
    container_name: logstash
    hostname: logstash
    ports:
      - "9600:9600"
      - "8089:8089"
    volumes:
      - ./logstash:/usr/share/logstash/pipeline/
    links:
      - elasticsearch:elasticsearch
      - kafka
    depends_on:
      - elasticsearch
      - kafka
    networks:
      - iot_network
  

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  iot_network:
    driver: bridge
